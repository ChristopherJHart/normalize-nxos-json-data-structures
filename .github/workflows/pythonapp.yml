# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Normalize NX-OS JSON Data Structures

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install black
      - name: Format with black
        run: |
          black ./normalize_nxos_json.py --check
          black ./examples --check
          black ./tests --check
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: |
          pip install wheel
          pip install flake8
          pip install flake8-docstrings
      - name: Lint with flake8
        run: |
          flake8 ./normalize_nxos_json.py --max-line-length=100 --docstring-convention=numpy
          flake8 ./examples --max-line-length=100 --docstring-convention=numpy
          flake8 ./tests --max-line-length=100 --docstring-convention=numpy
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install pytest and dependencies
        run: |
         pip install pytest
      - name: Run unit tests with pytest
        run: python -m pytest ./tests
